<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ComputerClockIs" xml:space="preserve">
    <value>L'orologio del computer è</value>
  </data>
  <data name="Warning4" xml:space="preserve">
    <value>Impossibile sincronizzare l'orologio</value>
  </data>
  <data name="Error3" xml:space="preserve">
    <value>La directory di origine non può essere remota</value>
  </data>
  <data name="DirectoryNotFound" xml:space="preserve">
    <value>Directory non trovata</value>
  </data>
  <data name="TimeNotCheckedOnline" xml:space="preserve">
    <value>Non è stato possibile controllare l'ora corrente online</value>
  </data>
  <data name="Warning1" xml:space="preserve">
    <value>Avviso: la sincronizzazione di Git non può essere avviata perché le directory source e git contengono progetti diversi. Controlla le impostazioni!</value>
  </data>
  <data name="Warning2" xml:space="preserve">
    <value>È stato eliminato più di un file, per motivi di sicurezza non effettueremo la sincronizzazione se viene eliminato più di un file!</value>
  </data>
  <data name="Error2" xml:space="preserve">
    <value>Errore: l'applicazione deve essere eseguita in modalità amministratore</value>
  </data>
  <data name="PleaseAdjustClock" xml:space="preserve">
    <value>"Si prega di regolare l'orologio di sistema!"</value>
  </data>
  <data name="Instruction1" xml:space="preserve">
    <value>Per ripristinare il backup devi copiare la versione desiderata dove preferisci, tramite la riga di comando (il copia e incolla non funziona)</value>
  </data>
  <data name="TargetNotFound" xml:space="preserve">
    <value>Obiettivo non trovato!</value>
  </data>
  <data name="Suggest1" xml:space="preserve">
    <value>Suggerimento: si consiglia di impostare il ripristino automatico di Visual Studio su 1 minuto: strumenti-&gt;Opzioni-&gt;Ambiente-Ripristino automatico</value>
  </data>
  <data name="Info" xml:space="preserve">
    <value>NOTA: La directory SOURCE è quella con i file da conservare (i tuoi progetti e le tue soluzioni devono essere qui), nella directory TARGET verranno salvati i backup giornalieri, la directory GIT è una directory remota accessibile a tutti coloro che lavorano sul stessi file sorgente, ad esempio, la directory git può corrispondere ad un disco di rete o all'indirizzo di una pen drive collegata al router, in questa directory Context creerà una versione sincronizzata della sorgente in tempo reale.</value>
  </data>
  <data name="Error1" xml:space="preserve">
    <value>Errore: durante la prima configurazione Git e Source non possono contenere file contemporaneamente: se si desidera sincronizzare questo computer con il Git condiviso, allora Git deve contenere i file e la directory Source deve essere vuota. Se vuoi creare un Git condiviso, allora Git deve essere vuoto e Source deve contenere i file che vuoi condividere.</value>
  </data>
  <data name="SourceNotFound" xml:space="preserve">
    <value>Fonte non trovata!</value>
  </data>
  <data name="TimeIncorrect" xml:space="preserve">
    <value>L'ora corrente del computer non è corretta: è</value>
  </data>
  <data name="FileLocked" xml:space="preserve">
    <value>File bloccato in modo permanente da un processo</value>
  </data>
  <data name="Warning3" xml:space="preserve">
    <value>Impossibile creare collegamenti simbolici</value>
  </data>
  <data name="ClockFixed" xml:space="preserve">
    <value>Ho corretto l'orologio di sistema!</value>
  </data>
  <data name="Warning5" xml:space="preserve">
    <value>È possibile eliminare solo le directory vuote</value>
  </data>
</root>
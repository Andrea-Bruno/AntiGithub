//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AntiGit.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Dictionary {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Dictionary() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("AntiGit.Resources.Dictionary", typeof(Dictionary).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: During the first setup Git and Source cannot contain files at the same time: If you want to synchronize this computer with the shared Git, then Git must contain the files and the Source directory must be empty. If you want to create a shared Git, then Git must be empty and Source must contain the files you want to share..
        /// </summary>
        internal static string Error1 {
            get {
                return ResourceManager.GetString("Error1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: The application must be run in administrator mode.
        /// </summary>
        internal static string Error2 {
            get {
                return ResourceManager.GetString("Error2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To restore the backup you need to copy the desired version where you prefer, via the command line (copy and paste does not work).
        /// </summary>
        internal static string Instruction1 {
            get {
                return ResourceManager.GetString("Instruction1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source not found!.
        /// </summary>
        internal static string SourceNotFound {
            get {
                return ResourceManager.GetString("SourceNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Suggest: It is recommended setting Visual Studio Auto Recovery to 1 minute: tools-&gt;Options-&gt;Environment-AutoRecover.
        /// </summary>
        internal static string Suggest1 {
            get {
                return ResourceManager.GetString("Suggest1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target not found!.
        /// </summary>
        internal static string TargetNotFound {
            get {
                return ResourceManager.GetString("TargetNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning: Git sync cannot be started because the source and git directories contain different projects. Check the settings!.
        /// </summary>
        internal static string Warning1 {
            get {
                return ResourceManager.GetString("Warning1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More than one file has been deleted, for security reasons we will not synchronize if more than one file is deleted!.
        /// </summary>
        internal static string Warning2 {
            get {
                return ResourceManager.GetString("Warning2", resourceCulture);
            }
        }
    }
}

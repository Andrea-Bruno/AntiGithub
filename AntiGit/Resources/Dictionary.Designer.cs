//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AntiGitLibrary.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Dictionary {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Dictionary() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("AntiGitLibrary.Resources.Dictionary", typeof(Dictionary).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I fixed the system clock!.
        /// </summary>
        public static string ClockFixed {
            get {
                return ResourceManager.GetString("ClockFixed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The computer clock is.
        /// </summary>
        public static string ComputerClockIs {
            get {
                return ResourceManager.GetString("ComputerClockIs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Directory not found.
        /// </summary>
        public static string DirectoryNotFound {
            get {
                return ResourceManager.GetString("DirectoryNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: During the first setup Git and Source cannot contain files at the same time: If you want to synchronize this computer with the shared Git, then Git must contain the files and the Source directory must be empty. If you want to create a shared Git, then Git must be empty and Source must contain the files you want to share..
        /// </summary>
        public static string Error1 {
            get {
                return ResourceManager.GetString("Error1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: The application must be run in administrator mode.
        /// </summary>
        public static string Error2 {
            get {
                return ResourceManager.GetString("Error2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The source directory cannot be remote.
        /// </summary>
        public static string Error3 {
            get {
                return ResourceManager.GetString("Error3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FTP paths are not allowed.
        /// </summary>
        public static string Error4 {
            get {
                return ResourceManager.GetString("Error4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Links to other directories are not allowed.
        /// </summary>
        public static string Error5 {
            get {
                return ResourceManager.GetString("Error5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File permanently locked by a process.
        /// </summary>
        public static string FileLocked {
            get {
                return ResourceManager.GetString("FileLocked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NOTE: The SOURCE directory is the one with the files to keep (your projects and your solutions must be here), in the TARGET directory the daily backups will be saved, the GIT directory is a remote directory accessible to all those who work on the same source files, for example, the git directory can correspond to a disk of network or to the address of a pen drive connected to the router, in this directory Context will create a synchronized version of the source in real time..
        /// </summary>
        public static string Info {
            get {
                return ResourceManager.GetString("Info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To restore the backup you need to copy the desired version where you prefer, via the command line (copy and paste does not work).
        /// </summary>
        public static string Instruction1 {
            get {
                return ResourceManager.GetString("Instruction1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;Please adjust the system clock!&quot;.
        /// </summary>
        public static string PleaseAdjustClock {
            get {
                return ResourceManager.GetString("PleaseAdjustClock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source not found!.
        /// </summary>
        public static string SourceNotFound {
            get {
                return ResourceManager.GetString("SourceNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Suggest: It is recommended setting Visual Studio Auto Recovery to 1 minute: tools-&gt;Options-&gt;Environment-AutoRecover.
        /// </summary>
        public static string Suggest1 {
            get {
                return ResourceManager.GetString("Suggest1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target not found!.
        /// </summary>
        public static string TargetNotFound {
            get {
                return ResourceManager.GetString("TargetNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current computer time is incorrect: It is.
        /// </summary>
        public static string TimeIncorrect {
            get {
                return ResourceManager.GetString("TimeIncorrect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current time could not be checked online.
        /// </summary>
        public static string TimeNotCheckedOnline {
            get {
                return ResourceManager.GetString("TimeNotCheckedOnline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning: Git sync cannot be started because the source and git directories contain different projects. Check the settings!.
        /// </summary>
        public static string Warning1 {
            get {
                return ResourceManager.GetString("Warning1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More than one file has been deleted, for security reasons we will not synchronize if more than one file is deleted!.
        /// </summary>
        public static string Warning2 {
            get {
                return ResourceManager.GetString("Warning2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to create symbolic links.
        /// </summary>
        public static string Warning3 {
            get {
                return ResourceManager.GetString("Warning3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to synchronize the clock.
        /// </summary>
        public static string Warning4 {
            get {
                return ResourceManager.GetString("Warning4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only empty directories can be deleted.
        /// </summary>
        public static string Warning5 {
            get {
                return ResourceManager.GetString("Warning5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Local files have been deleted while this app was turned off, this is not allowed and they will be restored!.
        /// </summary>
        public static string Warning6 {
            get {
                return ResourceManager.GetString("Warning6", resourceCulture);
            }
        }
    }
}

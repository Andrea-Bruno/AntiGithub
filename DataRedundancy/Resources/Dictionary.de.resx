<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ClockFixed" xml:space="preserve">
    <value>Ich habe die Systemuhr repariert!</value>
  </data>
  <data name="ComputerClockIs" xml:space="preserve">
    <value>Die Computeruhr ist!</value>
  </data>
  <data name="DirectoryNotFound" xml:space="preserve">
    <value>Das Verzeichnis wurde nicht gefunden</value>
  </data>
  <data name="Error1" xml:space="preserve">
    <value>Fehler: Während der ersten Installation können Git und Source nicht gleichzeitig Dateien enthalten: Wenn Sie diesen Computer mit dem freigegebenen Git synchronisieren möchten, dann muss Git die Dateien enthalten und das Quellverzeichnis muss leer sein. Wenn Sie ein freigegebenes Git erstellen möchten, muss Git leer sein und Source muss die Dateien enthalten, die Sie freigeben möchten.!</value>
  </data>
  <data name="Error2" xml:space="preserve">
    <value>Fehler: Die Anwendung muss im Administratormodus ausgeführt werden!</value>
  </data>
  <data name="Error3" xml:space="preserve">
    <value>Das Quellverzeichnis kann nicht remote sein!</value>
  </data>
  <data name="Error4" xml:space="preserve">
    <value>FTP-Pfade sind nicht erlaubt!</value>
  </data>
  <data name="Error5" xml:space="preserve">
    <value>Links zu anderen Verzeichnissen sind nicht erlaubt!</value>
  </data>
  <data name="FileLocked" xml:space="preserve">
    <value>Datei durch einen Prozess dauerhaft gesperrt!</value>
  </data>
  <data name="Info" xml:space="preserve">
    <value>HINWEIS: Das SOURCE-Verzeichnis ist dasjenige mit den zu behaltenden Dateien (Ihre Projekte und Ihre Lösungen müssen hier sein), im TARGET-Verzeichnis werden die täglichen Backups gespeichert, das GIT-Verzeichnis ist ein Remote-Verzeichnis, auf das alle zugreifen können, die an denselben Quelldateien arbeiten, zum Beispiel kann das Git-Verzeichnis einer Festplatte des Netzwerks oder der Adresse eines USB-Sticks entsprechen, der mit dem Router verbunden ist,  In diesem Verzeichnis erstellt Context eine synchronisierte Version der Quelle in Echtzeit.!</value>
  </data>
  <data name="Instruction1" xml:space="preserve">
    <value>Um das Backup wiederherzustellen, müssen Sie die gewünschte Version über die Befehlszeile kopieren (Kopieren und Einfügen funktioniert nicht)!</value>
  </data>
  <data name="PleaseAdjustClock" xml:space="preserve">
    <value>"Bitte stellen Sie die Systemuhr ein!"!</value>
  </data>
  <data name="SourceNotFound" xml:space="preserve">
    <value>Quelle nicht gefunden!</value>
  </data>
  <data name="Suggest1" xml:space="preserve">
    <value>Vorschlag: Es wird empfohlen, Visual Studio Auto Recovery auf 1 Minute einzustellen: tools-&amp;gt;Options-&amp;gt;Environment-AutoRecover!</value>
  </data>
  <data name="TargetNotFound" xml:space="preserve">
    <value>Ziel nicht gefunden!</value>
  </data>
  <data name="TimeIncorrect" xml:space="preserve">
    <value>Die aktuelle Computerzeit ist falsch: Das ist es</value>
  </data>
  <data name="TimeNotCheckedOnline" xml:space="preserve">
    <value>Die aktuelle Uhrzeit konnte nicht online überprüft werden!</value>
  </data>
  <data name="Warning1" xml:space="preserve">
    <value>Warnung: Git-Synchronisierung kann nicht gestartet werden, da die Quell- und Git-Verzeichnisse unterschiedliche Projekte enthalten. Überprüfen Sie die Einstellungen!</value>
  </data>
  <data name="Warning2" xml:space="preserve">
    <value>Mehr als eine Datei wurde gelöscht, aus Sicherheitsgründen werden wir nicht synchronisieren, wenn mehr als eine Datei gelöscht wird!</value>
  </data>
  <data name="Warning3" xml:space="preserve">
    <value>Symbolische Links können nicht erstellt werden!</value>
  </data>
  <data name="Warning4" xml:space="preserve">
    <value>Die Uhr kann nicht synchronisiert werden!</value>
  </data>
  <data name="Warning5" xml:space="preserve">
    <value>Nur leere Verzeichnisse können gelöscht werden!</value>
  </data>
  <data name="Warning6" xml:space="preserve">
    <value>Lokale Dateien wurden gelöscht, während diese App ausgeschaltet war, dies ist nicht erlaubt und sie werden wiederhergestellt!</value>
  </data>
  <data name="InstanceAlreadyRunning" xml:space="preserve">
    <value>Instanz läuft bereits!</value>
  </data>
  <data name="Suggest2" xml:space="preserve">
    <value>Vorschlag: Um das Problem zu lösen, wird empfohlen, das Laufwerk zu formatieren oder zu reparieren!</value>
  </data>
</root>
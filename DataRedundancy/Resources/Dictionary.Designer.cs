//------------------------------------------------------------------------------
// <auto-generated>
//     Il codice è stato generato da uno strumento.
//     Versione runtime:4.0.30319.42000
//
//     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
//     il codice viene rigenerato.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataRedundancy.Resources {
    using System;
    
    
    /// <summary>
    ///   Classe di risorse fortemente tipizzata per la ricerca di stringhe localizzate e così via.
    /// </summary>
    // Questa classe è stata generata automaticamente dalla classe StronglyTypedResourceBuilder.
    // tramite uno strumento quale ResGen o Visual Studio.
    // Per aggiungere o rimuovere un membro, modificare il file con estensione ResX ed eseguire nuovamente ResGen
    // con l'opzione /str oppure ricompilare il progetto VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Dictionary {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Dictionary() {
        }
        
        /// <summary>
        ///   Restituisce l'istanza di ResourceManager nella cache utilizzata da questa classe.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DataRedundancy.resources.Dictionary", typeof(Dictionary).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Esegue l'override della proprietà CurrentUICulture del thread corrente per tutte le
        ///   ricerche di risorse eseguite utilizzando questa classe di risorse fortemente tipizzata.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a I fixed the system clock!.
        /// </summary>
        public static string ClockFixed {
            get {
                return ResourceManager.GetString("ClockFixed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a The computer clock is.
        /// </summary>
        public static string ComputerClockIs {
            get {
                return ResourceManager.GetString("ComputerClockIs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Directory not found.
        /// </summary>
        public static string DirectoryNotFound {
            get {
                return ResourceManager.GetString("DirectoryNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Error: During the first setup Git and Source cannot contain files at the same time: If you want to synchronize this computer with the shared Git, then Git must contain the files and the Source directory must be empty. If you want to create a shared Git, then Git must be empty and Source must contain the files you want to share..
        /// </summary>
        public static string Error1 {
            get {
                return ResourceManager.GetString("Error1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Error: The application must be run in administrator mode.
        /// </summary>
        public static string Error2 {
            get {
                return ResourceManager.GetString("Error2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a The source directory cannot be remote.
        /// </summary>
        public static string Error3 {
            get {
                return ResourceManager.GetString("Error3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a FTP paths are not allowed.
        /// </summary>
        public static string Error4 {
            get {
                return ResourceManager.GetString("Error4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Links to other directories are not allowed.
        /// </summary>
        public static string Error5 {
            get {
                return ResourceManager.GetString("Error5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a File permanently locked by a process.
        /// </summary>
        public static string FileLocked {
            get {
                return ResourceManager.GetString("FileLocked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a NOTE: The SOURCE directory is the one with the files to keep (your projects and your solutions must be here), in the TARGET directory the daily backups will be saved, the GIT directory is a remote directory accessible to all those who work on the same source files, for example, the git directory can correspond to a disk of network or to the address of a pen drive connected to the router, in this directory Context will create a synchronized version of the source in real time..
        /// </summary>
        public static string Info {
            get {
                return ResourceManager.GetString("Info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Instance already running!.
        /// </summary>
        public static string InstanceAlreadyRunning {
            get {
                return ResourceManager.GetString("InstanceAlreadyRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a To restore the backup you need to copy the desired version where you prefer, via the command line (copy and paste does not work).
        /// </summary>
        public static string Instruction1 {
            get {
                return ResourceManager.GetString("Instruction1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a &quot;Please adjust the system clock!&quot;.
        /// </summary>
        public static string PleaseAdjustClock {
            get {
                return ResourceManager.GetString("PleaseAdjustClock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Source not found!.
        /// </summary>
        public static string SourceNotFound {
            get {
                return ResourceManager.GetString("SourceNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Suggest: It is recommended setting Visual Studio Auto Recovery to 1 minute: tools-&gt;Options-&gt;Environment-AutoRecover.
        /// </summary>
        public static string Suggest1 {
            get {
                return ResourceManager.GetString("Suggest1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Suggest: to solve the problem it is recommended that you format or repair the drive.
        /// </summary>
        public static string Suggest2 {
            get {
                return ResourceManager.GetString("Suggest2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Target not found!.
        /// </summary>
        public static string TargetNotFound {
            get {
                return ResourceManager.GetString("TargetNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a The current computer time is incorrect: It is.
        /// </summary>
        public static string TimeIncorrect {
            get {
                return ResourceManager.GetString("TimeIncorrect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a The current time could not be checked online!.
        /// </summary>
        public static string TimeNotCheckedOnline {
            get {
                return ResourceManager.GetString("TimeNotCheckedOnline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Warning: Git sync cannot be started because the source and git directories contain different projects. Check the settings!.
        /// </summary>
        public static string Warning1 {
            get {
                return ResourceManager.GetString("Warning1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a More than one file has been deleted, for security reasons we will not synchronize if more than one file is deleted!.
        /// </summary>
        public static string Warning2 {
            get {
                return ResourceManager.GetString("Warning2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Unable to create symbolic links!.
        /// </summary>
        public static string Warning3 {
            get {
                return ResourceManager.GetString("Warning3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Unable to synchronize the clock!.
        /// </summary>
        public static string Warning4 {
            get {
                return ResourceManager.GetString("Warning4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Only empty directories can be deleted!.
        /// </summary>
        public static string Warning5 {
            get {
                return ResourceManager.GetString("Warning5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Local files have been deleted while this app was turned off, this is not allowed and they will be restored!.
        /// </summary>
        public static string Warning6 {
            get {
                return ResourceManager.GetString("Warning6", resourceCulture);
            }
        }
    }
}

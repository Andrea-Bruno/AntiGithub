<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ClockFixed" xml:space="preserve">
    <value>J’ai réparé l’horloge système !</value>
  </data>
  <data name="ComputerClockIs" xml:space="preserve">
    <value>le temps est compté</value>
  </data>
  <data name="DirectoryNotFound" xml:space="preserve">
    <value>Répertoire introuvable</value>
  </data>
  <data name="Error1" xml:space="preserve">
    <value>Erreur : Lors de la première installation, Git et Source ne peuvent pas contenir de fichiers en même temps : si vous souhaitez synchroniser cet ordinateur avec le Git partagé, Git doit contenir les fichiers et le répertoire Source doit être vide. Si vous voulez créer un Git partagé, alors Git doit être vide et Source doit contenir les fichiers que vous voulez partager.</value>
  </data>
  <data name="Error2" xml:space="preserve">
    <value>Erreur : L’application doit être exécutée en mode administrateur !</value>
  </data>
  <data name="Error3" xml:space="preserve">
    <value>Le répertoire source ne peut pas être distant !</value>
  </data>
  <data name="Error4" xml:space="preserve">
    <value>Les chemins FTP ne sont pas autorisés!</value>
  </data>
  <data name="Error5" xml:space="preserve">
    <value>Les liens vers d’autres répertoires ne sont pas autorisés!</value>
  </data>
  <data name="FileLocked" xml:space="preserve">
    <value>Fichier verrouillé définitivement par un processus!</value>
  </data>
  <data name="Info" xml:space="preserve">
    <value>NOTE: Le répertoire SOURCE est celui avec les fichiers à conserver (vos projets et vos solutions doivent être ici), dans le répertoire TARGET les sauvegardes quotidiennes seront sauvegardées, le répertoire GIT est un répertoire distant accessible à tous ceux qui travaillent sur les mêmes fichiers sources, par exemple, le répertoire git peut correspondre à un disque de réseau ou à l’adresse d’une clé USB connectée au routeur,  dans ce répertoire Context créera une version synchronisée de la source en temps réel.!</value>
  </data>
  <data name="Instruction1" xml:space="preserve">
    <value>Pour restaurer la sauvegarde, vous devez copier la version souhaitée où vous préférez, via la ligne de commande (copier et coller ne fonctionne pas)!</value>
  </data>
  <data name="PleaseAdjustClock" xml:space="preserve">
    <value>« Veuillez régler l’horloge système! »!</value>
  </data>
  <data name="SourceNotFound" xml:space="preserve">
    <value>Source introuvable!</value>
  </data>
  <data name="Suggest1" xml:space="preserve">
    <value>Suggestion: Il est recommandé de définir Visual Studio Auto Recovery sur 1 minute: tools-&amp;gt;Options-&amp;gt;Environment-AutoRecover!</value>
  </data>
  <data name="TargetNotFound" xml:space="preserve">
    <value>La cible est introuvable!</value>
  </data>
  <data name="TimeIncorrect" xml:space="preserve">
    <value>L’heure actuelle de l’ordinateur est incorrecte : </value>
  </data>
  <data name="TimeNotCheckedOnline" xml:space="preserve">
    <value>L’heure actuelle n’a pas pu être vérifiée en ligne!</value>
  </data>
  <data name="Warning1" xml:space="preserve">
    <value>Avertissement : la synchronisation Git ne peut pas être démarrée car les répertoires source et git contiennent des projets différents. Vérifiez les paramètres!</value>
  </data>
  <data name="Warning2" xml:space="preserve">
    <value>Plus d’un fichier a été supprimé, pour des raisons de sécurité, nous ne synchroniserons pas si plus d’un fichier est supprimé !</value>
  </data>
  <data name="Warning3" xml:space="preserve">
    <value>Impossible de créer des liens symboliques !</value>
  </data>
  <data name="Warning4" xml:space="preserve">
    <value>Impossible de synchroniser l’horloge!</value>
  </data>
  <data name="Warning5" xml:space="preserve">
    <value>Seuls les répertoires vides peuvent être supprimés !</value>
  </data>
  <data name="Warning6" xml:space="preserve">
    <value>Les fichiers locaux ont été supprimés alors que cette application était désactivée, ce n’est pas autorisé et ils seront restaurés !</value>
  </data>
  <data name="InstanceAlreadyRunning" xml:space="preserve">
    <value>Instance déjà en cours d’exécution !</value>
  </data>
  <data name="Suggest2" xml:space="preserve">
    <value>Suggestion: pour résoudre le problème, il est recommandé de formater ou de réparer le lecteur!</value>
  </data>
</root>